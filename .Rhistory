x1 <- c(3497900,2485475,1782875,1725450,1645575,1469800)
# Defino al vector de 1 normalizado
ones <- rep(1,6)/sqrt(6)
# Definición de proyección de x1 sobre 1
proy = t(x1) %*% ones %*% ones
proy
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Desviación estándar
StanDev <- sd(x1)
StanDev
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Longitud del vector
norm(vDesv)
# Desviación estándar
StanDev <- sd(x1)
StanDev
sqrt(1396721)
1396721/2
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*StanDev
# Desviación estándar
StanDev <- sd(x1)
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
a <- t(proy)%*%vDesv
a
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*StanDev
# Desviación estándar
StanDev <- sd(x1)
# x1 = Nómina de jugadores
x1 <- c(3497900,2485475,1782875,1725450,1645575,1469800)
# Defino al vector de 1 normalizado
ones <- rep(1,6)/sqrt(6)
# Definición de proyección de x1 sobre 1
proy = t(x1) %*% ones %*% ones
proy
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
a <- t(proy)%*%vDesv
a
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*StanDev
# Desviación estándar
StanDev <- sd(x1)
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
a <- dot(t(proy),vDesv)
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
a <- dot(proy,vDesv)
dot?
# Definición de vector desviación
vDesv <- x1 - proy
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*StanDev
# Desviación estándar
StanDev <- sd(x1)
StandDev
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*StanDev
# Desviación estándar
StanDev <- sd(x1)
StanDev
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*(StanDev^2)
# Desviación estándar
StanDev <- sd(x1)
StanDev
install.packages("GDAdata")
library(gdata)
install.packages("gadata")
install.packages("gdata")
help("dotchart")
library(gdata)
xMatrix <- cbind(x1,x2)
xMatrix <- cbind(x1,x2)
xMatrix <- cbind(x1,x2)
# x2 = % de perdidos-ganados
x2 <- c(0.623,0.593,0.512,0.5,0.463,0.395)
xMatrix <- cbind(x1,x2)
xMatrix <- cbind(x1,x2)
xMatrix
xMatrix <- matrix(cbind(x1,x2))
xMatrix
xMatrix <- cbind(x1,x2)
xMatrix[2,1]
xMatrix <- cbind(x1,x2)
xMatrix[2,2]
xMatrix <- cbind(x1,x2)
xMatrix
X <- cbind(x1,x2)   # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n
xBar
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) %*% Sn
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
S
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
S
(sd(X))
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
S
(var(x1))
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
S
(var(x2))
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
vmg <- det(S)
vmg
vmt <- tr(S)
vmt <- sum(diag(S))
vmt
datos <- read.table("INEGIConstruccion2017.csv")
datos <- read.table("INEGIConstruccion2017.txt")
datos <- read.table("D:/ITAM/Aplicada III/Tareas/HW2/INEGIConstruccion2017.csv")
datos <- read.table("D:/ITAM/AplicadaIII/Tareas/HW2/INEGIConstruccion2017.csv",header=True)
datos <- read.table("D:/ITAM/AplicadaIII/Tareas/HW2/INEGIConstruccion2017.csv",header=True)
datos <- read.table("D:/ITAM/AplicadaIII/Tareas/HW2/INEGIConstruccion2017.csv",header=TRUE)
datos <- read.table("D:/ITAM/AplicadaIII/Tareas/HW2/INEGIConstruccion2017.csv",header=TRUE)
datos <- read.table("D:\ITAM\Aplicada III\Tareas\HW2\INEGIConstruccion2017.csv",header=TRUE)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv",header=TRUE)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
colnames(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(datos)
View(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
x1 <- datos %>%
filter(Periodicidad..Mensual)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
head(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
head(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(datos)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato %>% select(-Periodicidad: Mensual)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato %>% select(-Periodicidad: Mensual)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato % > % select(-Periodicidad: Mensual)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(dato)
datos <- dato % > % select(-Periodicidad: Mensual)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(dato)
datos <- dato % > % select(-Periodicidad..Mensual)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
head(datos)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato %>% filter(Periodo = "2017/01")
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
colnames(dato)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato %>% filter(Periodo == "2017/01")
library(lattice)
library(ggplot2)
library(nutshell)
library(tidyverse)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato %>% filter(Periodo == "2017/01")
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- dato %>% filter(Periodo == "2017/01")
head(datos)
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
# Datos de enero 2017
datos <- dato %>% filter(Periodo == "2017/01")
head(datos)
# x1: total de horas trabajadas
x1 <- df[["Construcción (encuesta mensual) > Por entidad federativa > Horas trabajadas"]]
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
# Datos de enero 2017
datos <- dato %>% filter(Periodo == "2017/01")
head(datos)
# x1: total de horas trabajadas
x1 <- df[["Construcción (encuesta mensual) > Por entidad federativa > Horas trabajadas > Total Aguascalientes(Miles de horas) "]]
dato <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
# Datos de enero 2017
datos <- dato %>% filter(Periodo == "2017/01")
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- datos(-c[1])
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- datos(-c(1])
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- datos[-c(1)]
# Datos de enero 2017
# x1: total de horas trabajadas
x1 <-
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- datos[-c(1)]
# Datos de enero 2017
# x1: total de horas trabajadas
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- datos[-c(1)]
head(datos)
# Datos de enero 2017
# x1: total de horas trabajadas
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=TRUE)
datos <- datos[-c(1),]
head(datos)
# Datos de enero 2017
# x1: total de horas trabajadas
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-c(1),]
head(datos)
# Datos de enero 2017
# x1: total de horas trabajadas
names(datos)
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos
head(datos)
# Datos de enero 2017
# x1: total de horas trabajadas
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos <- datos[-1,]   # Elimino el primer renglón
datos[] <- lapply(datos, function(x) type.convert(as.character(x)))
head(datos)
# Datos de enero 2017
# x1: total de horas trabajadas
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos <- datos[-1,]   # Elimino el primer renglón
datos[] <- lapply(datos, function(x) type.convert(as.character(x)))
# Datos de enero 2017
datos <- datos %>% filter(Periodo == "2017/01")
head(datos)
# x1: total de horas trabajadas
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos)
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos <- datos[-1,]   # Elimino el primer renglón
datos[] <- lapply(datos, function(x) type.convert(as.character(x)))
# Datos de enero 2017
datos <- datos %>% filter(Periodo == "2017/01")
head(datos)
# x1: total de horas trabajadas
S = matrix(c(5,4,4,5),nrow = 2)
S
?inv
?solve
S = matrix(c(5,4,4,5),nrow = 2)
Sinv = solve(S)
Sinv
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos <- datos[-1,]                     # Elimino el primer renglón
datos[] <- lapply(datos, function(x) type.convert(as.character(x))) # Primera columna names(datos) se vuelve el header
# Datos de enero 2017
datos <- datos %>% filter(Periodo == "2017/01")
library(lattice)
library(ggplot2)
library(nutshell)
library(tidyverse)
# x1 = Nómina de jugadores
x1 <- c(3497900,2485475,1782875,1725450,1645575,1469800)
# Defino al vector de 1 normalizado
ones <- rep(1,6)/sqrt(6)
# Definición de proyección de x1 sobre 1
proy = t(x1) %*% ones %*% ones
proy
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Desviación estándar
StanDev <- sd(x1)
StanDev
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*(StanDev^2)
# x2 = % de perdidos-ganados
x2 <- c(0.623,0.593,0.512,0.5,0.463,0.395)
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
vmg <- det(S)
vmg
vmt <- sum(diag(S))
vmt
S = matrix(c(5,4,4,5),nrow = 2)
Sinv = solve(S)
Sinv
datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos <- datos[-1,]                     # Elimino el primer renglón
datos[] <- lapply(datos, function(x) type.convert(as.character(x))) # Primera columna names(datos) se vuelve el header
# Datos de enero 2017
datos <- datos %>% filter(Periodo == "2017/01")
head(datos)
# Horas trabajadas (dependiente, no dependiente, etc)
datosHorasT <- datos[,str_detect(names(datos), "Horas trabajadas")]
head(datosHorasT)
datosHorasTSinDep <- datosHorasT[,str_detect(names(datosHorasT), "Dependiente", negate=TRUE)]
head(datosHorasTSinDep)
# x1: total de horas trabajadas
library(lattice)
library(ggplot2)
library(nutshell)
library(tidyverse)
# x1 = Nómina de jugadores
x1 <- c(3497900,2485475,1782875,1725450,1645575,1469800)
# Defino al vector de 1 normalizado
ones <- rep(1,6)/sqrt(6)
# Definición de proyección de x1 sobre 1
proy = t(x1) %*% ones %*% ones
proy
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Desviación estándar
StanDev <- sd(x1)
StanDev
# x2 = % de perdidos-ganados
x2 <- c(0.623,0.593,0.512,0.5,0.463,0.395)
# Definición de proyección de x2 sobre 1
proy2 = t(x2) %*% ones %*% ones
proy2
# Definición de vector desviación
vDesv2 <- x2 - proy2
vDesv2
# Desviación estándar
StanDev2 <- sd(x2)
StanDev2
ind      = matrix(0, ncol = 36)   # define una indicadora para el argumento which.row
ind[,13] = 1                      # linea derecha de la cara
ind[,14] = 1                      # oscuridad del cabello lado derecho
ind[,31] = 1                      # linea izquierda de la cara
ind[,32] = 1                      # oscuridad izquierda del cabello
x      = rnorm(50)
y      = rnorm(50, mean = 2)
z      = t(cbind(t(x),t(y)));    # arma matriz (100x1)
faces(as.matrix(z[1:50]),ind, main="Observaciones 1 a 50", ncol.plot = 5, nrow.plot = 10) # primeras 50 caras
library(lattice)
library(ggplot2)
library(nutshell)
library(tidyverse)
ind      = matrix(0, ncol = 36)   # define una indicadora para el argumento which.row
ind[,13] = 1                      # linea derecha de la cara
ind[,14] = 1                      # oscuridad del cabello lado derecho
ind[,31] = 1                      # linea izquierda de la cara
ind[,32] = 1                      # oscuridad izquierda del cabello
x      = rnorm(50)
y      = rnorm(50, mean = 2)
z      = t(cbind(t(x),t(y)));    # arma matriz (100x1)
faces(as.matrix(z[1:50]),ind, main="Observaciones 1 a 50", ncol.plot = 5, nrow.plot = 10) # primeras 50 caras
# x1 = Nómina de jugadores
x1 <- c(3497900,2485475,1782875,1725450,1645575,1469800)
# Defino al vector de 1 normalizado
ones <- rep(1,6)/sqrt(6)
# Definición de proyección de x1 sobre 1
proy = t(x1) %*% ones %*% ones
proy
# Definición de vector desviación
vDesv <- x1 - proy
vDesv
# Desviación estándar
StanDev <- sd(x1)
StanDev
# Longitud del vector
norma <- norm(vDesv)
norma^2
6*(StanDev^2)
# x2 = % de perdidos-ganados
x2 <- c(0.623,0.593,0.512,0.5,0.463,0.395)
# Definición de proyección de x2 sobre 1
proy2 = t(x2) %*% ones %*% ones
proy2
# Definición de vector desviación
vDesv2 <- x2 - proy2
vDesv2
# Desviación estándar
StanDev2 <- sd(x2)
StanDev2
X <- cbind(x1,x2)                 # Creo la matriz de X1 y X2
n <- nrow(X)
uno <- rep(1,n)
xBar <- t(X) %*% uno / n          # x barra
H <- diag(n) - uno%*%t(uno) / n   # H
Sn <- t(X) %*% H %*% X / n        # Sn
S <- n/(n-1) * Sn
vmg <- det(S)
vmg
vmt <- sum(diag(S))
vmt
S = matrix(c(5,4,4,5),nrow = 2)
Sinv = solve(S)
Sinv
# datos <- read.csv("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\INEGIConstruccion2017.csv", header=FALSE)
datos <- read.csv(".\\INEGIConstruccion2017.csv", header=FALSE)
datos <- datos[-1,]
names(datos) <- as.matrix(datos[1,])    # Tomo primer renglón
datos <- datos[-1,]                     # Elimino el primer renglón
datos[] <- lapply(datos, function(x) type.convert(as.character(x))) # Primera columna names(datos) se vuelve el header
# Datos de enero 2017
datos <- datos %>% filter(Periodo == "2017/01")
head(datos)
datosTotalesNac <- datos[,str_detect(names(datos), "Total nacional")]
# Horas trabajadas (dependiente + no dependiente, o lo mismo que es la suma de los totales por estado)
hrasTrabajadas <- datosTotalesNac %>% select(2,6) #dependiente y no dependiente
# x1: total de horas trabajadas
sumaHorasT <- hrasTrabajadas[,1]+hrasTrabajadas[,2]
#x2: valor total de producción
totalProd <- datos[,str_detect(names(datos), "tipo de obra > Total Total")]
#x3: total de horas trabajadas Dependiente
horasDep <- hrasTrabajadas[,1]
#x4: Obreros Dependiente
obrerosDep <- datosTotalesNac[,str_detect(names(datosTotalesNac), "Obreros")]
#x5: Empleados Dependiente
empDep <- datosTotalesNac[,str_detect(names(datosTotalesNac), "Empleados")]
#x6: Propietarios Dependiente
propDep <- datosTotalesNac[,str_detect(names(datosTotalesNac), "Propietarios")]
#x7: total de horas trabajadas No dependiente
horasNoDep <- hrasTrabajadas[,2]
(X <- c(sumaHorasT, totalProd, horasDep, obrerosDep, empDep, propDep, horasNoDep))
?faces
??faces
?faces
??faces
include_graphics("D:\\ITAM\\Aplicada III\\Tareas\\HW2\\HM2_e4.pdf")
includepdf[]{HM2_e4.pdf}
includepdf{HM2_e4.pdf}
includepdf[{HM2_e4.pdf}]
includepdf[{HM2_e4.pdf}]
